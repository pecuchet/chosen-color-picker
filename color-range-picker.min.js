const DOC=document,DEFAULTS={parent:null,target:null,size:150,onPick:null,colors:["#fc824c","#fcb74c","#fcd04c","#fefe4c","#d4ea46","#67b035","#3ea2ce","#4c7cfe","#5b31a4","#9235af","#a7325b","#fc5b4c"]};class ColorRangePicker{constructor(t){const e=t=>`Provide a 'options.${t}' element to append the color picker to.`;if(t.parent=ColorRangePicker._cacheEl(t.parent),t.target=ColorRangePicker._cacheEl(t.target),!t.parent)throw new TypeError(e("parent"));if(!t.target)throw new TypeError(e("target"));this.opt=Object.assign({},DEFAULTS,t),this.canvas=null,this.color=null,this._bind()}static _cacheEl(t){return t?"string"==typeof t?DOC.querySelector(t):t.nodeType?t:null:null}_setup(){const t=this.opt,e=t.parent,r=DOC.createElement("canvas"),o=r.style;return r.height=r.width=t.size,o.display="none",o.position="absolute",o.top=o.left=`-${t.size/2-e.clientWidth/2}px`,ColorRangePicker._draw(r.getContext("2d"),t.size,t.colors),e.classList.add("has-picker"),e.style.position="relative",e.appendChild(r),this.canvas=r,this}static _draw(t,e,r=[]){const o=e/2,n=360/r.length;let i=270,a=270+n;r.forEach((e,r)=>{setTimeout(()=>{t.beginPath(),t.arc(o,o,50,i*Math.PI/180,a*Math.PI/180,!1),t.lineWidth=30,t.strokeStyle=e,t.stroke(),i+=n,a+=n},30*r)})}_pick(t,e){const r=t.getBoundingClientRect(),o=t.getContext("2d").getImageData(e.clientX-r.left,e.clientY-r.top,1,1).data;this.color=[o[0],o[1],o[2]],this.opt.target.style.backgroundColor=`rgb(${this.color.join(",")})`,this.toggle()}get rgb(){return this.color?`rgb(${this.color.join(",")})`:""}get hex(){return this.color?ColorRangePicker.RGBToHex(this.color):""}static RGBToHex(t){let e=Array.isArray(t)?t:t.match(/\d+/g),r=t=>{let e=parseInt(t,10).toString(16);return 1===e.length?"0"+e:e};return"#"+r(e[0])+r(e[1])+r(e[2])}static hexToRGB(t){t=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(t,e,r,o)=>e+e+r+r+o+o);let e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e?[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]:null}static range(t,e=.1){let r=[];if(!(t="HEX"===ColorRangePicker.getFormat(t)?ColorRangePicker.hexToRGB(t):t))return null;for(let o=-.5;o<.5;o+=e){let e=o<0?0:255,n=o<0?-1*o:o,i=parseInt(t[0]),a=parseInt(t[1]),s=parseInt(t[2]);r.push("rgb("+(Math.round((e-i)*n)+i)+","+(Math.round((e-a)*n)+a)+","+(Math.round((e-s)*n)+s)+")")}return r}static getFormat(t){return"string"==typeof t?/,/.test(t)?"RGB":"HEX":"RGB"}toggle(){const t=this.canvas.style;return t.display="none"!==t.display?"none":"block"}destroy(){let t=this.opt.parent;t.classList.remove("has-picker"),t.removeEventListener("click",this._click,!1),this.opt=this.canvas=this.color=null}_bind(){this.opt.parent.addEventListener("click",this._click=this._click.bind(this),!1)}_click(t){const e=t.target;return t.preventDefault(),this.opt.parent.classList.contains("has-picker")?"canvas"===e.nodeName.toLowerCase()?(this._pick(e,t),void("function"==typeof this.opt.onPick&&this.opt.onPick.call(this,this))):this.toggle():this._setup().toggle()}}export default ColorRangePicker;
